# ~/.gitconfig
#	@author:	Kipras Melnikovas (kipras.org) <kipras@kipras.org>
#	@dotfiles:	https://github.com/sarpik/voidrice
#	@license:	GPL-3.0
#
#	@description:
#	This is Git's per-user configuration file.
#

[user]
	# @param username - custom, used for some aliases / scripts (& also my github/bitbucket username)
	username = sarpik
	name = Kipras Melnikovas
	email = kipras@kipras.org
	signingkey = AA505BC1C6D8AD90
[core]
	#editor = '/usr/bin/env code' --new-window --wait
	editor = "$EDITOR"
	autocrlf = input # `auto` for Windows, `input` for *nix. Read more @ https://stackoverflow.com/q/5834014/9285308
	safecrlf = false # Hides warning message but doesn't impact `autocrlf` functionality
	pager = less -R
	longpaths = true
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	grep = auto
[commit]
	verbose = true
	gpgSign = true
[merge]
	ff = no
[rebase]
	missingCommitsCheck = warn
[pull]
	rebase = true
	ff = yes
[hub]
	protocol = ssh
[help]
	autoCorrect = 0
[diff]
	tool = default-difftool
[difftool "default-difftool"]
  cmd = code --wait --diff $LOCAL $REMOTE
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[winUpdater]
	recentlySeenVersion = 2.21.0.windows.1

[alias]
	a = add
	ad = add .
	adc = !git add . && git c
	ap = add --patch
	b = branch
	ba = branch --all
	bp = backup
	backup = !git-backup # remote script, availabe @ dotfiles/.scripts/tools/git-backup
	c = commit -S -s
	ca = c --amend
	cl = clone
	co = checkout
	#co = !git stash -u && git checkout
	cod = checkout dev
	com = checkout master
	#checkout = !git stash -u && command git "$@"
	cfg = config --global --edit
	cs = !clear && git status
	csl = !clear && git sl
	d = diff
	d = diff .
	ds = diff --staged
	df = diff FETCH_HEAD
	#e =
	fl = flow
	f = fetch
	fa = fetch --all
	#g =
	gpu = push -u origin master
	#h =
	#i =
	#j =
	#k =
	#l =
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lp = log --patch --follow
	#m = merge
	mf = merge --ff # I have `merge` set to `ff: no` (see above), so by default it's `merge --no-ff`. This is the opposite.
	#n =
	#o =
	p = push
	pl = pull
	pt = push --tags
	parent = !git show-branch | sed \"s/].*//\" | grep \"\\*\" | grep -v \"$(git rev-parse --abbrev-ref HEAD)\" | head -n1 | sed \"s/^.*\\[//\"
	#q =
	#r =
	rmbp = rmbackup
	rmbackup = !git-rm-backup # remote script, availabe @ dotfiles/.scripts/tools/git-rm-backup
	s = status
	sa = status --untracked-files=all
	sb = show-branch
	sh = show HEAD
	shc = !git show HEAD | wc
	si = status --ignored=traditional
	sl = !git -c color.status=always status | less -R # https://stackoverflow.com/a/18304605
			# /\ the -c option is explained by `man git` @ 47
			# > Pass a configuration parameter to the command. The value given will override values from configuration files.
	so = show
	ss = show
	sil = !git -c color.status=always status --ignored=traditional | less -R
	stash-unapply = !git stash show -p | git apply -Rc
	#t =
	#u =
	#v =
	#w =
	#x =
	#y =
	#z =
